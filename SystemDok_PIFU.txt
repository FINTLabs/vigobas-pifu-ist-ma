[PIFUMAExtension]
Supports "http://pifu.no/xsd/pifu-ims_sas/pifu-ims_sas-1.1" version "PIFU IMS_SAS 2014-07-04"

Description :
[SourceCode/AutoGenerated/PIFU-IMS_SAS.cs] is autogenerated classes from PIFU-IMS_SAS.xsd by using "xsd.exe /c PIFU-IMS_SAS.xsd"
[SourceCode/XmlParser.cs] uses these auto-generated classes to serialize the input file into a object (enterprise) contain the entire file, i.e. can be a significant overhead with large documents
Only limited support for "kompakt" transfer (experimental), this is rather shoddy aspect of PIFU where even if it is stated as a full export not all elements is exported but only those that have changed. 
It is something between delta and full export where it is expected that all objects not in the transfer is already present in the system (we import into).

The enterprise object is later divided into PIFUGroups [SourceCode/PIFUGroup.cs] and PIFUPersons [SourceCode/PIFUPerson.cs] which are container object for holding the attributes to later be exported to FIM-CS. 
A PIFUPerson is a a CC of pifu person object + the convenience attributes "ID" and "OtherSystemsID".
"ID" is the anchor attribute and corresponds to a active account in the exporting system (type is missing or new) <person><sourcedid><id>
"OthersystemsID" is all other active ids format "ID":ID; "Source":source
A PIFUPerson also have the attributes "org" and unit" where these are determined by which groups the person is member of (and thereby which units and orgs these groups have a relationship to).
The rest of the attributes of the pifu person is automatically represented in FIM-CS by using reflection on the pifu person object. 

A PIFUGroup is a more complex type since it contains many elements that is not existing in a pifu group.
A PIFUGroups can have three types; group/unit or org. 
Note: PIFU standard have no notion of org (and unit), it instead dived groups into groups and organisation groups. 
In PIFU MA a unit is PIFU group that is of "type" organisation group. An "org" is simply the top unit (have no parents besides itself).
The unit and org is derived from the relationship field of the pifu group. 

A PIFUGRoup have the convinence attributes ID and OthersystemsID (similar to PIFUPerson) but also have these attributes derived from the membership object:
MemberRole   ---  What role(s) exist in the group and what persons (ID) have them. There is no support for subroles atm
FinalResult   ---  What Final results does the persons have. 
IterimResults ---  What Iterim results does the persons have. 
Abscense ---  What abscense does the persons have. 
Note: The pifu memebership object does not exist in PIFU MA so these attributes are mapped onto each PIFUGroup. 
The membership object contains more attributes than represented by the above PIFUGroup objects. 

The rest of the attributes of the pifu group is automatically represented in FIM-CS by using reflection on the group object. 

Main Limitations: 
no support for subroles in MemberRole
Only handles parent type of relationships not alias or “Known as”, will fail if unhandled relationship or alias relationship (current standard only specify parent relationships, so it is ok)  
Only support groups with one grouptype, will fail if a root have more than one grouptype 
No convenience attributes for "contacts persons" in PIFUPerson
